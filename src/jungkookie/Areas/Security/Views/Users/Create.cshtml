@model jungkookie.Areas.Security.Models.Userview

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <header class="row content-header">
            <div class="col-md-6">
                <h2>Create User</h2>
                <h4></h4>
            </div>
            <div class="col-md-6 content-action text-right">

                <a href="@Url.Action("Index")" class="btn btn-primary">
                    <span class="glyphicon glyphicon-remove"></span>Cancel
                </a>

                <button type="submit" value="Save" class="btn btn-success">
                    <span class="glyphicon glyphicon-heart"></span> Save

                </button>
            </div>

        </header>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-1">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
                <div class="col-md-5">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>

            <div class="col-md-1">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
            </div>
            <div class="form-group">
                <div class="col-md-1">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
                @*<div class="col-md-pull-3">
                    @Html.LabelFor(model => model.EmploymentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.EmploymentDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmploymentDate, "", new { @class = "text-danger" })
                </div>*@
            </div>

        <div class="form-group">
            @*<div class="col-mid-1">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-1" })
            </div>*@
            
            <div class="col-md-5">
                <fieldset>
                    @Html.RadioButtonFor(model => model.Gender, "Male", false)Male<br/>
                    @Html.RadioButtonFor(model => model.Gender, "Female", false)Female<br/>
                    @Html.RadioButtonFor(model => model.Gender, "Others", false)Others<br />
                </fieldset>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
        <div class="col-md-1">
            @Html.LabelFor(model => model.Educations.FirstOrDefault().School, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-4">
            @Html.EditorFor(model => model.Educations.FirstOrDefault().School, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
        </div>
    <div class="form-group">
        <div class="col-md-1">
            @Html.LabelFor(model => model.Educations.FirstOrDefault().YearAttended, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="col-md-3">
            @Html.EditorFor(model => model.Educations.FirstOrDefault().YearAttended, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Educations.FirstOrDefault().YearAttended, "", new { @class = "text-danger" })
        </div>
    </div>*@

        <div class="form-group">

        </div>
    </div>
}


</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
